buildscript {
    ext {
        jacksonVersion = "2.9.8"
        logbackVersion = "1.2.3"
        lombokVersion = "1.18.4"
        romeVersion = "1.12.0"

        assertjVersion = "3.12.0"
        junitJupiterVersion = "5.4.0"
        mockitoVersion = "2.24.5"
    }

    repositories {
        mavenCentral()
    }
}

wrapper {
    gradleVersion = '5.2.1'
    distributionType = Wrapper.DistributionType.ALL
    distributionSha256Sum = "9dc729f6dbfbbc4df1692665d301e028976dacac296a126f16148941a9cf012e"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group 'com.github.ysamsonov'
    version '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        implementation "com.rometools:rome:${romeVersion}"

        implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

        implementation "ch.qos.logback:logback-classic:${logbackVersion}"

        // test
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

        testImplementation "org.assertj:assertj-core:${assertjVersion}"

        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    }

    test {
        useJUnitPlatform()
    }
}

project(":rss-reader-core") {
    apply plugin: 'application'

    mainClassName = 'com.github.ysamsonov.rssreader.Application'

    task runApp(type: JavaExec, group: 'application') {
        classpath = sourceSets.main.runtimeClasspath
        main = mainClassName
    }

    task fatJar(type: Jar, group: 'build') {
        manifest {
            attributes 'Main-Class': mainClassName
        }

        from {
            configurations.runtimeClasspath.collect {
                println "FatJar include: ${it}"
                it.isDirectory() ? it : zipTree(it)
            }
        }

        with jar
    }
}
